datasource db {
  provider = "mongodb"
  url      = env("DATABASE_URL")
}

generator client {
  provider = "prisma-client-js"
}

model User {
  id                        String   @id @default(auto()) @map("_id") @db.ObjectId
  telegramId                String   @unique
  points                    Float    @default(0)
  pointsBalance             Float    @default(0)
  multitapLevelIndex        Int      @default(0)
  energy                    Int      @default(100)
  energyRefillsLeft         Int      @default(6)
  energyLimitLevelIndex     Int      @default(0)
  mineLevelIndex            Int      @default(0)
  lastPointsUpdateTimestamp DateTime @default(now())
  lastEnergyUpdateTimestamp DateTime @default(now())
  lastEnergyRefillsTimestamp DateTime @default(now())
  tonWalletAddress          String?
  referralCode              String   @unique @default(uuid())
  referrals                 User[]   @relation("Referrals")
  referredBy                User?    @relation("Referrals", fields: [referredById], references: [id], onDelete: NoAction, onUpdate: NoAction)
  referredById              String?  @db.ObjectId
  
  // Tasks
  completedTasks UserTask[]
}

model Task {
  id                String     @id @default(auto()) @map("_id") @db.ObjectId
  title             String
  description       String
  tokens            Int
  type              String
  category          String
  callToAction      String
  link              String
  taskStartTimestamp DateTime?
  userTasks         UserTask[]
}

model UserTask {
  id        String   @id @default(auto()) @map("_id") @db.ObjectId
  user      User     @relation(fields: [userId], references: [id], onDelete: Cascade, onUpdate: Cascade)
  userId    String   @db.ObjectId
  task      Task     @relation(fields: [taskId], references: [id], onDelete: Cascade, onUpdate: Cascade)
  taskId    String   @db.ObjectId
  completed DateTime @default(now())

  @@unique([userId, taskId])
}